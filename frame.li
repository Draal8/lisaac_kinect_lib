Section Header
  + name := FRAME;
  
  //Ne fonctionne pas
  
Section Inherit
  + parent_object :OBJECT := OBJECT;
  
Section Private
  - rawdata :NATIVE_ARRAY UINTEGER_8;      ///< Unaligned start of #data.
  
Section Public
  - data;                     ///< Data of the frame (aligned). @see See Frame::Type for pixel format.
  - type :UINTEGER_8;         ///< enum Type {Color = 1, Ir = 2, Depth = 4}
  - format :UINTEGER_8;       ///< enum Format {Invalid = 0, Raw = 1, Float = 2, BGRX = 4, RGBX = 5, Gray = 6}
  - width :INTEGER;           ///< Length of a line (in pixels).
  - height :INTEGER;          ///< Number of lines in the frame.
  - bytes_per_pixel :INTEGER; ///< Number of bytes in a pixel. If frame format is 'Raw' this is the buffer size.
  - timestamp :UINTEGER_32;   ///< Unit: 0.125 millisecond. Usually incrementing by 266 (30Hz) or 533 (15Hz).
  - sequence :UINTEGER_32;    ///< Increasing frame sequence number
  - exposure :REAL;           ///< From 0.5 (very bright) to ~60.0 (fully covered)
  - gain :REAL;               ///< From 1.0 (bright) to 1.5 (covered)
  - gamma :REAL;              ///< From 1.0 (bright) to 6.4 (covered)
  - status :UINTEGER_32;      ///< zero if ok; non-zero for errors.
  
  + init <- deferred;
  + refresh <- deferred;
  + print <- deferred;
  
  + rawdata_give :NATIVE_ARRAY UINTEGER_8 <- ( rawdata );
  
  + main <-
  (
    "test".println;
  );
  
  
  
  
  